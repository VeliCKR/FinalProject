import 'package:flutter/material.dart';

class ShoppingPage extends StatefulWidget {
  const ShoppingPage({super.key});

  @override
  _ShoppingPageState createState() => _ShoppingPageState();
}

class _ShoppingPageState extends State<ShoppingPage> with SingleTickerProviderStateMixin {
  late TabController _tabController;

  @override
  void initState() {
    super.initState();
    _tabController = TabController(length: 3, vsync: this);
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text(
          'Shopping Expressions',
          style: TextStyle(fontSize: 24, fontWeight: FontWeight.bold, color: Colors.white),
        ),
        flexibleSpace: Container(
          decoration: BoxDecoration(
            image: DecorationImage(
              image: AssetImage('assets/image/backround.png'),
              fit: BoxFit.cover,
            ),
          ),
        ),
        bottom: TabBar(
          controller: _tabController,
          tabs: [
            _buildTab('English', 'ðŸ‡ºðŸ‡¸', _englishPatterns()),
            _buildTab('Spanish', 'ðŸ‡ªðŸ‡¸', _spanishPatterns()),
            _buildTab('Italian', 'ðŸ‡®ðŸ‡¹', _italianPatterns()),
          ],
        ),
      ),
      body: Container(
        decoration: BoxDecoration(
          image: DecorationImage(
            image: AssetImage('assets/image/backround.png'),
            fit: BoxFit.cover,
          ),
        ),
        child: TabBarView(
          controller: _tabController,
          children: [
            _buildPatternList(_englishPatterns()),
            _buildPatternList(_spanishPatterns()),
            _buildPatternList(_italianPatterns()),
          ],
        ),
      ),
      bottomNavigationBar: Container(
        decoration: const BoxDecoration(
          image: DecorationImage(
            image: AssetImage('assets/image/backround.png'),
            fit: BoxFit.cover,
          ),
        ),
        child: BottomNavigationBar(
          type: BottomNavigationBarType.fixed,
          items: const <BottomNavigationBarItem>[
            BottomNavigationBarItem(
              icon: Icon(Icons.home, color: Colors.white),
              activeIcon: Icon(Icons.home, color: Colors.white),
              label: 'Ã–ÄŸren',
            ),
            BottomNavigationBarItem(
              icon: Icon(Icons.message, color: Colors.white),
              activeIcon: Icon(Icons.message, color: Colors.white),
              label: 'ChatBox',
            ),
            BottomNavigationBarItem(
              icon: Icon(Icons.video_library, color: Colors.white),
              activeIcon: Icon(Icons.video_library, color: Colors.white),
              label: 'Videolar',
            ),
          ],
          currentIndex: 0,
          selectedItemColor: Colors.white,
          unselectedItemColor: Colors.white,
          backgroundColor: Colors.transparent,
          onTap: (int index) {
            // Bottom navigation bar elemanlarÄ±na tÄ±klandÄ±ÄŸÄ±nda yapÄ±lacak iÅŸlemleri ekleyin
            switch (index) {
              case 0:
              // Learn sekmesine gidin
                break;
              case 1:
              // Practice sekmesine gidin
                break;
              case 2:
              // Notifications sekmesine gidin
                break;
              case 3:
              // Chat sekmesine gidin
                break;
              case 4:
              // Settings sekmesine gidin
                break;
            }
          },
        ),
      ),
    );
  }

  // DiÄŸer metotlar burada...
  List<String> _englishPatterns() {
    return [
      'Hello',
      'How are you?',
      'Can I help you?',
      'I would like to buy...',
      'How much does this cost?',
      'Is there a discount?',
      'Where is the fitting room?',
      'Where can I find a shopping cart?',
      'Do you accept credit cards?',
      'Can I get a receipt?',
      'Thank you!',
    ];
  }

  List<String> _spanishPatterns() {
    return [
      'Hola',
      'Â¿CÃ³mo estÃ¡s?',
      'Â¿Puedo ayudarte?',
      'Me gustarÃ­a comprar...',
      'Â¿CuÃ¡nto cuesta esto?',
      'Â¿Hay algÃºn descuento?',
      'Â¿DÃ³nde estÃ¡ el probador?',
      'Â¿DÃ³nde puedo encontrar un carrito de compras?',
      'Â¿Aceptan tarjetas de crÃ©dito?',
      'Â¿Puedo obtener un recibo?',
      'Â¡Gracias!',
    ];
  }

  List<String> _italianPatterns() {
    return [
      'Ciao',
      'Come stai?',
      'Posso aiutarti?',
      'Vorrei comprare...',
      'Quanto costa questo?',
      'C\'Ã¨ uno sconto?',
      'Dove si trova il camerino?',
      'Dove posso trovare un carrello della spesa?',
      'Accettate carte di credito?',
      'Posso avere una ricevuta?',
      'Grazie!',
    ];
  }

  Tab _buildTab(String language, String flagEmoji, List<String> patterns) {
    return Tab(
      child: Column(
        mainAxisAlignment: MainAxisAlignment.center,
        children: [
          Row(
            mainAxisAlignment: MainAxisAlignment.center,
            children: [
              Text(
                language,
                style: TextStyle(fontSize: 18),
              ),
              SizedBox(width: 5),
              Text(
                flagEmoji,
                style: TextStyle(fontSize: 24),
              ),
            ],
          ),
        ],
      ),
    );
  }

  // DiÄŸer metotlar burada...

  Widget _buildPatternList(List<String> patterns) {
    return ListView.builder(
      itemCount: patterns.length,
      itemBuilder: (context, index) {
        return _buildPatternItem(patterns[index]);
      },
    );
  }

  Widget _buildPatternItem(String pattern) {
    return Card(
      margin: EdgeInsets.all(8.0),
      color: Colors.white,
      child: ListTile(
        title: Text(
          pattern,
          style: TextStyle(fontSize: 16, color: Colors.black),
        ),
        onTap: () {},
      ),
    );
  }
}

void main() {
  runApp(MaterialApp(
    home: ShoppingPage(),
  ));
}
